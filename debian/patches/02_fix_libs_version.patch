From: Alex Syrnikov <pioneer19@mailo.com>
Subject: Fix libraries version (remove git hash part)
diff --git a/libbutl/libbutl/buildfile b/libbutl/libbutl/buildfile
--- a/libbutl/libbutl/buildfile
+++ b/libbutl/libbutl/buildfile
@@ -88,14 +88,7 @@ lib{butl}: cxx.export.poptions = "-I$out_root" "-I$src_root"
 liba{butl}: cxx.export.poptions += -DLIBBUTL_STATIC
 libs{butl}: cxx.export.poptions += -DLIBBUTL_SHARED
 
-# For pre-releases use the complete version to make sure they cannot be used
-# in place of another pre-release or the final version. See the version module
-# for details on the version.* variable values.
-#
-if $version.pre_release
-  lib{butl}: bin.lib.version = @"-$version.project_id"
-else
-  lib{butl}: bin.lib.version = @"-$version.major.$version.minor"
+lib{butl}: bin.lib.version = @"-$version.major.$version.minor"
 
 # Generated options parser.
 #
diff --git a/build2/libbuild2/bash/buildfile b/build2/libbuild2/bash/buildfile
--- a/build2/libbuild2/bash/buildfile
+++ b/build2/libbuild2/bash/buildfile
@@ -43,18 +43,7 @@ lib{build2-bash}:
 liba{build2-bash}: cxx.export.poptions += -DLIBBUILD2_BASH_STATIC
 libs{build2-bash}: cxx.export.poptions += -DLIBBUILD2_BASH_SHARED
 
-# For pre-releases use the complete version to make sure they cannot be used
-# in place of another pre-release or the final version. See the version module
-# for details on the version.* variable values.
-#
-# And because this is a build system module, we also embed the same value as
-# the interface version (note that we cannot use build.version.interface for
-# bundled modules because we could be built with a different version of the
-# build system).
-#
-ver = ($version.pre_release    \
-       ? "$version.project_id" \
-       : "$version.major.$version.minor")
+ver = "$version.major.$version.minor"
 
 lib{build2-bash}: bin.lib.version = @"-$ver"
 libs{build2-bash}: bin.lib.load_suffix = "-$ver"
diff --git a/build2/libbuild2/bin/buildfile b/build2/libbuild2/bin/buildfile
--- a/build2/libbuild2/bin/buildfile
+++ b/build2/libbuild2/bin/buildfile
@@ -36,18 +36,7 @@ lib{build2-bin}: cxx.export.poptions = "-I$out_root" "-I$src_root"
 liba{build2-bin}: cxx.export.poptions += -DLIBBUILD2_BIN_STATIC
 libs{build2-bin}: cxx.export.poptions += -DLIBBUILD2_BIN_SHARED
 
-# For pre-releases use the complete version to make sure they cannot be used
-# in place of another pre-release or the final version. See the version module
-# for details on the version.* variable values.
-#
-# And because this is a build system module, we also embed the same value as
-# the interface version (note that we cannot use build.version.interface for
-# bundled modules because we could be built with a different version of the
-# build system).
-#
-ver = ($version.pre_release    \
-       ? "$version.project_id" \
-       : "$version.major.$version.minor")
+ver = "$version.major.$version.minor"
 
 lib{build2-bin}: bin.lib.version = @"-$ver"
 libs{build2-bin}: bin.lib.load_suffix = "-$ver"
diff --git a/build2/libbuild2/buildfile b/build2/libbuild2/buildfile
--- a/build2/libbuild2/buildfile
+++ b/build2/libbuild2/buildfile
@@ -180,14 +180,7 @@ if ($cxx.target.class != 'windows')
 liba{build2}: cxx.export.poptions += -DLIBBUILD2_STATIC
 libs{build2}: cxx.export.poptions += -DLIBBUILD2_SHARED
 
-# For pre-releases use the complete version to make sure they cannot be used
-# in place of another pre-release or the final version. See the version module
-# for details on the version.* variable values.
-#
-if $version.pre_release
-  lib{build2}: bin.lib.version = @"-$version.project_id"
-else
-  lib{build2}: bin.lib.version = @"-$version.major.$version.minor"
+lib{build2}: bin.lib.version = @"-$version.major.$version.minor"
 
 # Generated options parser.
 #
diff --git a/build2/libbuild2/c/buildfile b/build2/libbuild2/c/buildfile
--- a/build2/libbuild2/c/buildfile
+++ b/build2/libbuild2/c/buildfile
@@ -56,18 +56,7 @@ lib{build2-c}:
 liba{build2-c}: cxx.export.poptions += -DLIBBUILD2_C_STATIC
 libs{build2-c}: cxx.export.poptions += -DLIBBUILD2_C_SHARED
 
-# For pre-releases use the complete version to make sure they cannot be used
-# in place of another pre-release or the final version. See the version module
-# for details on the version.* variable values.
-#
-# And because this is a build system module, we also embed the same value as
-# the interface version (note that we cannot use build.version.interface for
-# bundled modules because we could be built with a different version of the
-# build system).
-#
-ver = ($version.pre_release    \
-       ? "$version.project_id" \
-       : "$version.major.$version.minor")
+ver = "$version.major.$version.minor"
 
 lib{build2-c}: bin.lib.version = @"-$ver"
 libs{build2-c}: bin.lib.load_suffix = "-$ver"
diff --git a/build2/libbuild2/cc/buildfile b/build2/libbuild2/cc/buildfile
--- a/build2/libbuild2/cc/buildfile
+++ b/build2/libbuild2/cc/buildfile
@@ -54,18 +54,7 @@ lib{build2-cc}:
 liba{build2-cc}: cxx.export.poptions += -DLIBBUILD2_CC_STATIC
 libs{build2-cc}: cxx.export.poptions += -DLIBBUILD2_CC_SHARED
 
-# For pre-releases use the complete version to make sure they cannot be used
-# in place of another pre-release or the final version. See the version module
-# for details on the version.* variable values.
-#
-# And because this is a build system module, we also embed the same value as
-# the interface version (note that we cannot use build.version.interface for
-# bundled modules because we could be built with a different version of the
-# build system).
-#
-ver = ($version.pre_release    \
-       ? "$version.project_id" \
-       : "$version.major.$version.minor")
+ver = "$version.major.$version.minor"
 
 lib{build2-cc}: bin.lib.version = @"-$ver"
 libs{build2-cc}: bin.lib.load_suffix = "-$ver"
diff --git a/build2/libbuild2/cxx/buildfile b/build2/libbuild2/cxx/buildfile
--- a/build2/libbuild2/cxx/buildfile
+++ b/build2/libbuild2/cxx/buildfile
@@ -56,18 +56,7 @@ lib{build2-cxx}:
 liba{build2-cxx}: cxx.export.poptions += -DLIBBUILD2_CXX_STATIC
 libs{build2-cxx}: cxx.export.poptions += -DLIBBUILD2_CXX_SHARED
 
-# For pre-releases use the complete version to make sure they cannot be used
-# in place of another pre-release or the final version. See the version module
-# for details on the version.* variable values.
-#
-# And because this is a build system module, we also embed the same value as
-# the interface version (note that we cannot use build.version.interface for
-# bundled modules because we could be built with a different version of the
-# build system).
-#
-ver = ($version.pre_release    \
-       ? "$version.project_id" \
-       : "$version.major.$version.minor")
+ver = "$version.major.$version.minor"
 
 lib{build2-cxx}: bin.lib.version = @"-$ver"
 libs{build2-cxx}: bin.lib.load_suffix = "-$ver"
diff --git a/build2/libbuild2/in/buildfile b/build2/libbuild2/in/buildfile
--- a/build2/libbuild2/in/buildfile
+++ b/build2/libbuild2/in/buildfile
@@ -36,18 +36,7 @@ lib{build2-in}: cxx.export.poptions = "-I$out_root" "-I$src_root"
 liba{build2-in}: cxx.export.poptions += -DLIBBUILD2_IN_STATIC
 libs{build2-in}: cxx.export.poptions += -DLIBBUILD2_IN_SHARED
 
-# For pre-releases use the complete version to make sure they cannot be used
-# in place of another pre-release or the final version. See the version module
-# for details on the version.* variable values.
-#
-# And because this is a build system module, we also embed the same value as
-# the interface version (note that we cannot use build.version.interface for
-# bundled modules because we could be built with a different version of the
-# build system).
-#
-ver = ($version.pre_release    \
-       ? "$version.project_id" \
-       : "$version.major.$version.minor")
+ver = "$version.major.$version.minor"
 
 lib{build2-in}: bin.lib.version = @"-$ver"
 libs{build2-in}: bin.lib.load_suffix = "-$ver"
diff --git a/build2/libbuild2/version/buildfile b/build2/libbuild2/version/buildfile
--- a/build2/libbuild2/version/buildfile
+++ b/build2/libbuild2/version/buildfile
@@ -44,18 +44,7 @@ lib{build2-version}:
 liba{build2-version}: cxx.export.poptions += -DLIBBUILD2_VERSION_STATIC
 libs{build2-version}: cxx.export.poptions += -DLIBBUILD2_VERSION_SHARED
 
-# For pre-releases use the complete version to make sure they cannot be used
-# in place of another pre-release or the final version. See the version module
-# for details on the version.* variable values.
-#
-# And because this is a build system module, we also embed the same value as
-# the interface version (note that we cannot use build.version.interface for
-# bundled modules because we could be built with a different version of the
-# build system).
-#
-ver = ($version.pre_release    \
-       ? "$version.project_id" \
-       : "$version.major.$version.minor")
+ver = "$version.major.$version.minor"
 
 lib{build2-version}: bin.lib.version = @"-$ver"
 libs{build2-version}: bin.lib.load_suffix = "-$ver"
